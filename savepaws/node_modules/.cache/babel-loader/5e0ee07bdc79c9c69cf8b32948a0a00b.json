{"remainingRequest":"/Users/mac/Desktop/save-pets-ui/savepaws/node_modules/babel-loader/lib/index.js!/Users/mac/Desktop/save-pets-ui/savepaws/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Desktop/save-pets-ui/savepaws/src/store/modules/location.js","dependencies":[{"path":"/Users/mac/Desktop/save-pets-ui/savepaws/src/store/modules/location.js","mtime":1600175247291},{"path":"/Users/mac/Desktop/save-pets-ui/savepaws/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/save-pets-ui/savepaws/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/save-pets-ui/savepaws/node_modules/eslint-loader/index.js","mtime":1599570899140}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9tYWMvRGVza3RvcC9zYXZlLXBldHMtdWkvc2F2ZXBhd3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9tYWMvRGVza3RvcC9zYXZlLXBldHMtdWkvc2F2ZXBhd3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfbXV0YXRpb25zOwoKaW1wb3J0IHsgZ21hcEFwaSBhcyBHb29nbGVNYXBzIH0gZnJvbSAidnVlMi1nb29nbGUtbWFwcyI7CmltcG9ydCAqIGFzIHR5cGVzIGZyb20gIi4uL211dGF0aW9ucy50eXBlcyI7CnZhciBERUZBVUxUX0NPT1JEUyA9IHsKICBsYXQ6IDUwLjQsCiAgbG5nOiAzMC42Cn07CnZhciBtb2R1bGUgPSB7CiAgc3RhdGU6IHsKICAgIGNvb3JkczogREVGQVVMVF9DT09SRFMsCiAgICBhZGRyZXNzOiAiIgogIH0sCiAgZ2V0dGVyczogewogICAgY29vcmRzOiBmdW5jdGlvbiBjb29yZHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmNvb3JkczsKICAgIH0sCiAgICBhZGRyZXNzOiBmdW5jdGlvbiBhZGRyZXNzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hZGRyZXNzOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgdHlwZXMuVVBEQVRFX0NPT1JEUywgZnVuY3Rpb24gKHN0YXRlLCBjb29yZHMpIHsKICAgIHN0YXRlLmNvb3JkcyA9IGNvb3JkczsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLlVQREFURV9BRERSRVNTLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmFkZHJlc3MgPSBwYXlsb2FkOwogIH0pLCBfbXV0YXRpb25zKSwKICBhY3Rpb25zOiB7CiAgICBzZXRBZGRyZXNzOiBmdW5jdGlvbiBzZXRBZGRyZXNzKF9yZWYsIHBheWxvYWQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICB2YXIgZ2VvbWV0cnkgPSBwYXlsb2FkLmdlb21ldHJ5OwogICAgICBjb21taXQodHlwZXMuVVBEQVRFX0NPT1JEUywgewogICAgICAgIGxhdDogZ2VvbWV0cnkubG9jYXRpb24ubGF0KCksCiAgICAgICAgbG5nOiBnZW9tZXRyeS5sb2NhdGlvbi5sbmcoKQogICAgICB9KTsKICAgICAgY29tbWl0KHR5cGVzLlVQREFURV9BRERSRVNTLCBwYXlsb2FkLmZvcm1hdHRlZF9hZGRyZXNzKTsKICAgIH0sCiAgICBydW5HZW9jb2RlOiBmdW5jdGlvbiBydW5HZW9jb2RlKF9yZWYyLCBsb2NhdGlvbikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICB2YXIgZ29vZ2xlTWFwcyA9IEdvb2dsZU1hcHMoKTsKICAgICAgdmFyIGdlb2NvZGVyID0gbmV3IGdvb2dsZU1hcHMubWFwcy5HZW9jb2RlcigpOwogICAgICBnZW9jb2Rlci5nZW9jb2RlKHsKICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24KICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdHMsIHN0YXR1cykgewogICAgICAgIGlmIChzdGF0dXMgPT09ICJPSyIgJiYgcmVzdWx0cy5sZW5ndGgpIHsKICAgICAgICAgIHZhciBfcmVzdWx0cyA9IF9zbGljZWRUb0FycmF5KHJlc3VsdHMsIDEpLAogICAgICAgICAgICAgIGdlbyA9IF9yZXN1bHRzWzBdOwoKICAgICAgICAgIGNvbW1pdCh0eXBlcy5VUERBVEVfQUREUkVTUywgZ2VvLmZvcm1hdHRlZF9hZGRyZXNzKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGdldEN1cnJlbnRMb2NhdGlvbjogZnVuY3Rpb24gZ2V0Q3VycmVudExvY2F0aW9uKF9yZWYzKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoOwogICAgICB2YXIgb3B0aW9ucyA9IHsKICAgICAgICB0aW1lb3V0OiAxMDAwMCwKICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWUKICAgICAgfTsKCiAgICAgIGlmICghbmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGZ1bmN0aW9uIChfcmVmNCkgewogICAgICAgIHZhciBjb29yZHMgPSBfcmVmNC5jb29yZHM7CiAgICAgICAgdmFyIGxhdCA9IGNvb3Jkcy5sYXRpdHVkZSwKICAgICAgICAgICAgbG5nID0gY29vcmRzLmxvbmdpdHVkZTsKICAgICAgICBjb21taXQodHlwZXMuVVBEQVRFX0NPT1JEUywgewogICAgICAgICAgbGF0OiBsYXQsCiAgICAgICAgICBsbmc6IGxuZwogICAgICAgIH0pOwogICAgICAgIGRpc3BhdGNoKCJydW5HZW9jb2RlIiwgewogICAgICAgICAgbGF0OiBsYXQsCiAgICAgICAgICBsbmc6IGxuZwogICAgICAgIH0pOwogICAgICB9LCBjb25zb2xlLndhcm4sIG9wdGlvbnMpOwogICAgfSAvLyBjYW5jZWxNaXNzaW9uKHtjb21taXR9KSB7CiAgICAvLyBjb21taXQodHlwZXMuVVBEQVRFX1JFUVVFU1RfU1RBVFVTLCBzdGF0dXMuRkFJTCk7CiAgICAvLyB9LAoKICB9Cn07CmV4cG9ydCBkZWZhdWx0IG1vZHVsZTs="},{"version":3,"sources":["/Users/mac/Desktop/save-pets-ui/savepaws/src/store/modules/location.js"],"names":["gmapApi","GoogleMaps","types","DEFAULT_COORDS","lat","lng","module","state","coords","address","getters","mutations","UPDATE_COORDS","UPDATE_ADDRESS","payload","actions","setAddress","commit","geometry","location","formatted_address","runGeocode","googleMaps","geocoder","maps","Geocoder","geocode","results","status","length","geo","getCurrentLocation","dispatch","options","timeout","enableHighAccuracy","navigator","geolocation","getCurrentPosition","latitude","longitude","console","warn"],"mappings":"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","sourcesContent":["import {gmapApi as GoogleMaps} from \"vue2-google-maps\";\nimport * as types from \"../mutations.types\";\n\nconst DEFAULT_COORDS = {\n  lat: 50.4,\n  lng: 30.6,\n};\n\nconst module = {\n  state: {\n    coords: DEFAULT_COORDS,\n    address: \"\",\n  },\n\n  getters: {\n    coords: (state) => state.coords,\n    address: (state) => state.address,\n  },\n\n  mutations: {\n    [types.UPDATE_COORDS](state, coords) {\n      state.coords = coords;\n    },\n    [types.UPDATE_ADDRESS](state, payload) {\n      state.address = payload;\n    },\n  },\n\n  actions: {\n    setAddress({commit}, payload) {\n      const {geometry} = payload;\n\n      commit(types.UPDATE_COORDS, {\n        lat: geometry.location.lat(),\n        lng: geometry.location.lng(),\n      });\n      commit(types.UPDATE_ADDRESS, payload.formatted_address);\n    },\n    runGeocode({commit}, location) {\n      const googleMaps = GoogleMaps();\n      const geocoder = new googleMaps.maps.Geocoder();\n\n      geocoder.geocode({location}, (results, status) => {\n        if (status === \"OK\" && results.length) {\n          const [geo] = results;\n          commit(types.UPDATE_ADDRESS, geo.formatted_address);\n        }\n      });\n    },\n    getCurrentLocation({commit, dispatch}) {\n      const options = {\n        timeout: 10000,\n        enableHighAccuracy: true,\n      };\n\n      if (!navigator.geolocation) {\n        return;\n      }\n\n      navigator.geolocation.getCurrentPosition(({coords}) => {\n        const {latitude: lat, longitude: lng} = coords;\n\n        commit(types.UPDATE_COORDS, {lat, lng});\n        dispatch(\"runGeocode\", {lat, lng});\n      }, console.warn, options);\n    },\n    // cancelMission({commit}) {\n    // commit(types.UPDATE_REQUEST_STATUS, status.FAIL);\n    // },\n  },\n};\n\nexport default module;\n"]}]}