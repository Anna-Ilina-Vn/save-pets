{"remainingRequest":"/Users/mac/Desktop/save-pets-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/save-pets-ui/src/views/find-location-view.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Desktop/save-pets-ui/src/views/find-location-view.vue","mtime":1598014449364},{"path":"/Users/mac/Desktop/save-pets-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/save-pets-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/save-pets-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/save-pets-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7Z21hcEFwaX0gZnJvbSAidnVlMi1nb29nbGUtbWFwcyI7CmltcG9ydCAqIGFzIHZpZXdzIGZyb20gIi4uL2xpYi92aWV3cy1saXN0IjsKaW1wb3J0IE1hbnVhbExvY2F0aW9uIGZyb20gIi4uL2NvbXBvbmVudHMvbWFudWFsLWxvY2F0aW9uLnZ1ZSI7CmltcG9ydCBTQnV0dG9uIGZyb20gIi4uL2NvbXBvbmVudHMvcy1idXR0b24udnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiZmluZC1sb2NhdGlvbi12aWV3IiwKCiAgY29tcG9uZW50czogewogICAgTWFudWFsTG9jYXRpb24sCiAgICBTQnV0dG9uLAogIH0sCgogIGRhdGE6ICgpID0+ICh7CiAgICBjb29yZHM6IHsKICAgICAgbGF0OiA1MC40LAogICAgICBsbmc6IDMwLjYsCiAgICB9LAogICAgaXNDb29yZHNFbnRlcmVkOiBmYWxzZSwKICAgIGlucHV0TG9jYXRpb246ICIiLAogICAgem9vbTogMTcsCiAgfSksCgogIGNvbXB1dGVkOiB7CiAgICBnb29nbGU6IGdtYXBBcGksCiAgICBpc1ZhbGlkQ29vcmRzKCkgewogICAgICByZXR1cm4gISF0aGlzLmNvb3Jkcy5sYXQgJiYgISF0aGlzLmNvb3Jkcy5sbmcgJiYgdGhpcy5pc0Nvb3Jkc0VudGVyZWQ7CiAgICB9LAogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBpZiAobmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7CiAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oKHtjb29yZHN9KSA9PiB7CiAgICAgICAgY29uc3Qge2xhdGl0dWRlOiBsYXQsIGxvbmdpdHVkZTogbG5nfSA9IGNvb3JkczsKICAgICAgICB0aGlzLmNvb3JkcyA9IHtsbmcsIGxhdH07CgogICAgICAgIHRoaXMuY29vcmRzRW50ZXJlZCgpOwogICAgICAgIHRoaXMucnVuR2VvY29kZSgpOwogICAgICB9LCB0aGlzLmNvb3Jkc0RlbmllZCk7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgcnVuR2VvY29kZSgpIHsKICAgICAgY29uc3QgZ2VvY29kZXIgPSBuZXcgdGhpcy5nb29nbGUubWFwcy5HZW9jb2RlcigpOwoKICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7bG9jYXRpb246IHRoaXMuY29vcmRzfSwgKHJlc3VsdHMsIHN0YXR1cykgPT4gewogICAgICAgIGlmIChzdGF0dXMgPT09ICJPSyIgJiYgcmVzdWx0cy5sZW5ndGgpIHsKICAgICAgICAgIGNvbnN0IFtnZW9dID0gcmVzdWx0czsKICAgICAgICAgIGNvbnN0IFtudW1iZXIsIHN0cmVldF0gPSBnZW8uYWRkcmVzc19jb21wb25lbnRzOwoKICAgICAgICAgIHRoaXMuaW5wdXRMb2NhdGlvbiA9IGAke3N0cmVldC5zaG9ydF9uYW1lfSwgJHtudW1iZXIuc2hvcnRfbmFtZX1gOwoKICAgICAgICAgIHRoaXMuY29vcmRzRW50ZXJlZCgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgY2hhbmdlQWRkcmVzcyhnZW8pIHsKICAgICAgY29uc3Qge2xvY2F0aW9ufSA9IGdlby5nZW9tZXRyeTsKCiAgICAgIHRoaXMuY29vcmRzID0gewogICAgICAgIGxhdDogbG9jYXRpb24ubGF0KCksCiAgICAgICAgbG5nOiBsb2NhdGlvbi5sbmcoKSwKICAgICAgfTsKCiAgICAgIHRoaXMuaW5wdXRMb2NhdGlvbiA9IGAke2dlby5uYW1lfSwgJHtnZW8udmljaW5pdHl9YDsKICAgICAgdGhpcy5jb29yZHNFbnRlcmVkKCk7CiAgICB9LAogICAgY29vcmRzRW50ZXJlZCgpIHsKICAgICAgaWYgKCF0aGlzLmlzQ29vcmRzRW50ZXJlZCkgewogICAgICAgIHRoaXMuaXNDb29yZHNFbnRlcmVkID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIGNvb3Jkc0RlbmllZChlcnIpIHsKICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgIH0sCiAgICBoYW5kbGVDaGFuZ2VWaWV3KCkgewogICAgICB0aGlzLiRlbWl0KCJjaGFuZ2UtdmlldyIsIHZpZXdzLlNFVF9JTkZPX1ZJRVcpOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["find-location-view.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"find-location-view.vue","sourceRoot":"src/views","sourcesContent":["<script>\nimport {gmapApi} from \"vue2-google-maps\";\nimport * as views from \"../lib/views-list\";\nimport ManualLocation from \"../components/manual-location.vue\";\nimport SButton from \"../components/s-button.vue\";\n\nexport default {\n  name: \"find-location-view\",\n\n  components: {\n    ManualLocation,\n    SButton,\n  },\n\n  data: () => ({\n    coords: {\n      lat: 50.4,\n      lng: 30.6,\n    },\n    isCoordsEntered: false,\n    inputLocation: \"\",\n    zoom: 17,\n  }),\n\n  computed: {\n    google: gmapApi,\n    isValidCoords() {\n      return !!this.coords.lat && !!this.coords.lng && this.isCoordsEntered;\n    },\n  },\n\n  mounted() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(({coords}) => {\n        const {latitude: lat, longitude: lng} = coords;\n        this.coords = {lng, lat};\n\n        this.coordsEntered();\n        this.runGeocode();\n      }, this.coordsDenied);\n    }\n  },\n\n  methods: {\n    runGeocode() {\n      const geocoder = new this.google.maps.Geocoder();\n\n      geocoder.geocode({location: this.coords}, (results, status) => {\n        if (status === \"OK\" && results.length) {\n          const [geo] = results;\n          const [number, street] = geo.address_components;\n\n          this.inputLocation = `${street.short_name}, ${number.short_name}`;\n\n          this.coordsEntered();\n        }\n      });\n    },\n    changeAddress(geo) {\n      const {location} = geo.geometry;\n\n      this.coords = {\n        lat: location.lat(),\n        lng: location.lng(),\n      };\n\n      this.inputLocation = `${geo.name}, ${geo.vicinity}`;\n      this.coordsEntered();\n    },\n    coordsEntered() {\n      if (!this.isCoordsEntered) {\n        this.isCoordsEntered = true;\n      }\n    },\n    coordsDenied(err) {\n      console.log(err);\n    },\n    handleChangeView() {\n      this.$emit(\"change-view\", views.SET_INFO_VIEW);\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"view find-location-view\">\n    <div class=\"find-location-view__map\">\n      <google-map\n        :center=\"coords\"\n        :zoom=\"zoom\"\n        :options=\"{\n          zoomControl: false,\n          mapTypeControl: false,\n          fullscreenControl: false,\n          streetViewControl: false,\n        }\"\n        map-type-id=\"terrain\"\n        style=\"width: 100%; height: 100%\"\n      >\n        <google-map-marker\n          :position=\"coords\"\n          :icon=\"{\n            url: require('../assets/placeholder.svg')\n          }\"\n        />\n      </google-map>\n    </div>\n\n    <div class=\"find-location-view__bottom-bar\">\n      <manual-location\n        :value=\"inputLocation\"\n        @change=\"changeAddress\"\n      >\n        <s-button\n          :disabled=\"!isCoordsEntered\"\n          @click=\"handleChangeView\"\n        >\n          Знайшов тварину\n        </s-button>\n      </manual-location>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.find-location-view__map {\n  flex: 1 0;\n}\n\n.find-location-view__bottom-bar {\n  height: 185px;\n  padding: 15px 15px 23px;\n  background: var(--light-100);\n}\n</style>\n"]}]}